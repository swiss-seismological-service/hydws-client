name: publish

on:
    push:
        tags:
            - 'v*.*.*'

jobs:
    tests:
        uses: ./.github/workflows/_tests.yml
        with:
            python-versions: '["3.10", "3.12"]'
    build:
        name: Build distribution
        needs:
            - tests
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  persist-credentials: false
                  fetch-depth: 250
                  fetch-tags: true
                  ref: ${{ github.ref }}
            - name: Get latest tag
              id: get-tag
              run: |
                  TAG=$(git describe --tags --exact-match HEAD 2>/dev/null || echo "")
                  echo "TAG=$TAG" >> $GITHUB_ENV
                  echo "Found tag: $TAG"
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.x'
            - name: Install pypa/build
              run: >-
                  python3 -m
                  pip install
                  build setuptools-scm
                  --user
            - name: Build a binary wheel and a source tarball
              run: python3 -m build
            - name: Store the distribution packages
              uses: actions/upload-artifact@v4
              with:
                  name: python-package-distributions
                  path: dist/

    publish-to-pypi:
        name: >-
            Publish to PyPI
        needs:
            - build
        runs-on: ubuntu-latest
        environment:
            name: pypi
            url: https://pypi.org/p/hydws-client
        permissions:
            id-token: write

        steps:
            - name: Download all the dists
              uses: actions/download-artifact@v4
              with:
                  name: python-package-distributions
                  path: dist/
            - name: Publish distribution ðŸ“¦ to PyPI
              uses: pypa/gh-action-pypi-publish@release/v1

    github-release:
        name: >-
            Create Release
        needs:
            - build
        runs-on: ubuntu-latest

        permissions:
            contents: write
            id-token: write

        steps:
            - name: Download all the dists
              uses: actions/download-artifact@v4
              with:
                  name: python-package-distributions
                  path: dist/
            - name: Sign the dists with Sigstore
              uses: sigstore/gh-action-sigstore-python@v3.0.0
              with:
                  inputs: >-
                      ./dist/*.tar.gz
                      ./dist/*.whl
            - name: Create GitHub Release
              env:
                  GITHUB_TOKEN: ${{ github.token }}
              run: >-
                  gh release create
                  "$GITHUB_REF_NAME"
                  --repo "$GITHUB_REPOSITORY"
                  --notes ""
            - name: Upload artifact signatures to GitHub Release
              env:
                  GITHUB_TOKEN: ${{ github.token }}
              run: >-
                  gh release upload
                  "$GITHUB_REF_NAME" dist/**
                  --repo "$GITHUB_REPOSITORY"

    # publish-to-testpypi:
    #     name: Publish to TestPyPI
    #     needs:
    #         - build
    #     runs-on: ubuntu-latest
    #     environment:
    #         name: testpypi
    #         url: https://test.pypi.org/p/hydws-client
    #     permissions:
    #         id-token: write

    #     steps:
    #         - name: Download all the Dists
    #           uses: actions/download-artifact@v4
    #           with:
    #               name: python-package-distributions
    #               path: dist/

    #         - name: Publish distribution to TestPyPI
    #           uses: pypa/gh-action-pypi-publish@release/v1
    #           with:
    #               repository-url: https://test.pypi.org/legacy/
